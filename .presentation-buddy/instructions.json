[
  {
    "type": "openFile",
    "path": "src/before.js"
  },
  {
    "type": "goto",
    "line": 1
  },
  {
    "type": "command",
    "command": "cursorDownSelect",
    "repeat": 9
  },
  {
    "type": "command",
    "command": "editor.action.clipboardCopyAction"
  },
  {
    "type": "createFile",
    "path": "src/demo.js"
  },
  {
    "type": "goto",
    "line": 1
  },
  {
    "type": "typeText",
    "text": [
      "import { from, fromEvent, interval } from 'rxjs';",
      "import { filter, map, scan, switchMap, take } from 'rxjs/operators';",
      "import { ajax } from 'rxjs/ajax';",
      "",
      ""
    ]
  },

  {
    "type": "command",
    "command": "editor.action.clipboardPasteAction"
  },
  {
    "type": "typeText",
    "text": [
      "from(numbers).subscribe(",
      "  value => (result.textContent = JSON.stringify(value))",
      ");"
    ]
  },
  {
    "type": "command",
    "command": "workbench.action.files.save"
  },
  {
    "skip": false,
    "type": "wait",
    "delay": "manual"
  },
  {
    "type": "goto",
    "line": 14,
    "column": 14
  },
  {
    "type": "typeText",
    "text": [
      ".pipe(filter(n => n % 2 === 0),map(n => ({ n })),scan((previous, current) => [...previous, current], []))"
    ]
  },
  {
    "type": "command",
    "command": "workbench.action.files.save"
  },
  {
    "skip": false,
    "type": "wait",
    "delay": "manual"
  },
  {
    "type": "goto",
    "line": 13
  },
  {
    "type": "typeText",
    "text": [
      "",
      "const numbersClicks$ = fromEvent(mapNumbers, 'click');",
      "",
      "numbersClicks$",
      "  .pipe(",
      "    switchMap(() => "
    ]
  },
  {
    "type": "goto",
    "line": 24,
    "column": 4
  },
  {
    "type": "typeText",
    "text": ["))"]
  },
  {
    "type": "command",
    "command": "workbench.action.files.save"
  },

  {
    "skip": false,
    "type": "wait",
    "delay": "manual"
  },
  {
    "type": "goto",
    "line": 27
  },
  {
    "type": "typeText",
    "text": [
      "",
      "fromEvent(startTimer, 'click')",
      "  .pipe(",
      "    switchMap(() => interval(1000)),",
      "    filter(n => n % 2 === 0),",
      "    map(n => ({ n })),",
      "    scan((previous, current) => [...previous, current], [])",
      "  )",
      "  .subscribe(value => (result.textContent = JSON.stringify(value)));",
      ""
    ]
  },
  {
    "type": "command",
    "command": "workbench.action.files.save"
  },

  {
    "skip": false,
    "type": "wait",
    "delay": "manual"
  },

  {
    "type": "goto",
    "line": 37
  },
  {
    "type": "typeText",
    "text": [
      "",
      "fromEvent(loadJokes, 'click')",
      "  .pipe(",
      "    switchMap(() => ajax.getJSON(jokesUrl)),",
      "    map(rsp => rsp.value)",
      "  )",
      "  .subscribe(value => (result.textContent = JSON.stringify(value)));",
      ""
    ]
  },
  {
    "type": "command",
    "command": "workbench.action.files.save"
  },

  {
    "skip": false,
    "type": "wait",
    "delay": "manual"
  },

  {
    "type": "goto",
    "line": 42,
    "column": 14
  },
  {
    "type": "typeText",
    "text": ["{next: "]
  },
  {
    "type": "goto",
    "line": 42,
    "column": 74
  },
  {
    "type": "typeText",
    "text": [
      ", error: err => result.textContent = err.message, complete: () => result.textContent = 'completed'}"
    ]
  },
  {
    "type": "command",
    "command": "workbench.action.files.save"
  }
]
